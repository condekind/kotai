#!/usr/bin/env zsh

progName=$0

() {

    sep(){
        print -lr "
------------------------------------- $1: -------------------------------------"
    }

    #optLevels=( O0 O1 O2 O3 Ofast Os Oz )
    optLevels=( O0 )

    countIntermediateFiles() {

        benchsdir=$1

        print -lr '' 'Number of .c files in '"$benchsdir:"
        find $benchsdir -maxdepth 1 -name "*.c" | wc -l

        print -lr '' 'Number of descriptors generated:'
        find $benchsdir -wholename "*.d/descriptor" | wc -l

        print -lr '' 'Number of constraints generated by Konstrain'"'"'s big-arr strategy:'
        find $benchsdir -wholename "*.d/constraint_big-arr" | wc -l

        print -lr '' 'Number of .c files generated by Jotai.cpp with a main() entry point:'
        find $benchsdir -wholename "*.d/*.c" | wc -l

        for optLevel in $optLevels; do

            sep $optLevel

            print -lr '' "[$optLevel] Number of binaries successfully compiled by clang with -$optLevel:"
            find $benchsdir -wholename "*.d/*$optLevel" | wc -l

            print -lr '' "[$optLevel] Number of .map files generated by cfggrind_asmmap:"
            find $benchsdir -wholename "*.d/*$optLevel.map" | wc -l

            print -lr '' "[$optLevel] Number of .cfg files generated by valgrind with --tool=cfggrind:"
            find $benchsdir -wholename "*.d/*$optLevel.cfg" | wc -l

            print -lr '' "[$optLevel] Number of .info files with stats produced by cfggrind_info:"
            find $benchsdir -wholename "*.d/*$optLevel.info" | wc -l

        done

        #print -lr '' 'complete: true'
        #grep -rl "complete: true" $benchsdir | wc -l

        #print -lr '' 'complete: false'
        #grep -rl "complete: false" $benchsdir | wc -l

    }

    # ---

    countIntermediateFiles $1

} "$@"

setopt nonomatch
rm -f vgcore*
