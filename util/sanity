#!/bin/bash
# =========================================================================== #
#
# Compilation pipeline sanity test
#
# --------------------------------------------------------------------------- #

if [ $# -ne 4 ]; then
    printf "Usage:\n  $(basename "$0") source.c {0,1,2,3,fast,z,s} funcName argv\n\n"
    exit 1
fi

if [ ! -f "$1" ]; then
    printf "$1 not found\n"
    exit 1
fi

case "$2" in
    0|1|2|3|fast|z|s)
        ;;
    *)
        printf "opt level -O$2 not valid\n"
        exit 1
        ;;
esac

# print commands (debug mode)

src=$1
opt=$2
fnName=$3
argv=$4
binName="${src%.*}"

# --------------------------------------------------------------------------- #


# compile
clang -Xclang -disable-O0-optnone   \
      -fno-inline                   \
      -g                            \
      -ggdb                         \
      -O"$opt"                      \
      -std=c2x                      \
      -Wall                         \
      -fno-stack-protector          \
      -no-pie                       \
      -o "$binName"                 \
      "$src"

if [ $? -ne 0 ]; then
    printf "[$?] clang error\n"
    exit 1
fi
printf "\n"

# --------------------------------------------------------------------------- #

# map
cfggrind_asmmap $binName > $binName.map

if [ $? -ne 0 ]; then
    printf "[$?] cfggrind_asmmap error\n"
    exit 1
fi
printf "\n"


# --------------------------------------------------------------------------- #

# valgrind --tool=cfggrind
valgrind --tool=cfggrind                \
         --cfg-outfile="$binName.cfg"   \
         --instrs-map="$binName.map"    \
         ./"$binName" $argv

if [ $? -ne 0 ]; then
    printf "[$?] valgrind --tool=cfggrind error\n"
    exit 1
fi
printf "\n"


# --------------------------------------------------------------------------- #

# info
cfggrind_info -f "$binName::$fnName"    \
              -s functions              \
              -m json                   \
              ./"$binName.cfg" > "$binName.info"

if [ $? -ne 0 ]; then
    printf "[$?] cfggrind_info error\n"
    exit 1
fi
printf "\n"


# --------------------------------------------------------------------------- #

printf "Done, no errors reported\n\n"

# =========================================================================== #
